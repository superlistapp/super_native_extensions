on:
  pull_request:
  push:
    branches:
      - main

name: Check and Lint

jobs:
  Flutter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 #v2.7.0
      - uses: subosito/flutter-action@cc97e1648fff6ca5cc647fa67f47e70f7895510b # 2.11.0
        with:
          channel: "stable"
      - name: Install Melos
        run: flutter pub global activate melos
      - name: Melos Boostrap
        run: melos bootstrap
      - name: Flutter Format
        run: melos exec -c 1 dart format . --output=none --set-exit-if-changed
      - name: Flutter Analyze
        run: melos exec -c 1 flutter analyze
      - name: Futter Test
        run: melos exec -c 1 flutter test

  Rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 #v2.7.0
      - run: rustup default stable
      - run: rustup update
      - run: rustup component add rustfmt
      - run: cargo fmt --all --manifest-path super_native_extensions/rust/Cargo.toml -- --check

  Rust:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust:
          - stable
          - nightly
    steps:
      - name: Install GTK
        if: (matrix.os == 'ubuntu-latest')
        run: sudo apt-get update && sudo apt-get install libgtk-3-dev
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 #v2.7.0
      - run: rustup default ${{ matrix.rust }}
      - run: rustup update
      - name: Install clippy
        run: rustup component add clippy
      - name: Run cargo clippy
        run: cargo clippy --manifest-path super_native_extensions/rust/Cargo.toml -- -D warnings
      - name: Run cargo clippy (tests)
        run: cargo clippy --tests --manifest-path super_native_extensions/rust/Cargo.toml -- -D warnings
      - name: Install Rust Android Target
        run: rustup target add armv7-linux-androideabi
        if: (matrix.os == 'ubuntu-latest')
      - name: Run cargo clippy (Android)
        if: (matrix.os == 'ubuntu-latest')
        run: cargo clippy --target=armv7-linux-androideabi --manifest-path super_native_extensions/rust/Cargo.toml -- -D warnings
      - name: Install Rust iOS Target
        run: rustup target add aarch64-apple-ios
        if: (matrix.os == 'macos-latest')
      - name: Run cargo clippy (iOS)
        run: cargo clippy --target=aarch64-apple-ios --manifest-path super_native_extensions/rust/Cargo.toml -- -D warnings
        if: (matrix.os == 'macos-latest')
      - name: Run cargo test
        run: cargo test --manifest-path super_native_extensions/rust/Cargo.toml -- --test-threads=1
