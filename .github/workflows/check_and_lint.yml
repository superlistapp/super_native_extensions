on:
  pull_request:
  push:
    branches:
      - main

name: Check and Lint

jobs:

  Flutter:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        directory:
          - ./super_clipboard
          - ./super_native_extensions
    defaults:
      run:
        working-directory: ${matrix.directory}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'master'
      - run: flutter pub get
      - run: flutter format --output=none --set-exit-if-changed .
      - run: flutter analyze
      - run: flutter test

  # Rustfmt:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions-rs/toolchain@v1
  #     with:
  #       profile: minimal
  #       toolchain: stable
  #       override: true
  #   - run: rustup component add rustfmt
  #   - uses: actions-rs/cargo@v1
  #     with:
  #       command: fmt
  #       args: --all -- --check

  # Rust:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         - ubuntu-latest
  #         - macOS-latest
  #         - windows-latest
  #   steps:
  #     - name: Install GTK
  #       if: (matrix.os == 'ubuntu-latest')
  #       run: sudo apt-get update && sudo apt-get install libgtk-3-dev
  #     - uses: actions/checkout@v2
  #     - name: Install clippy
  #       run: rustup component add clippy
  #     - name: Run cargo clippy
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings
  #     - name: Run cargo clippy (mock)
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: --features=mock -- -D warnings
  #     - name: Run cargo clippy (tests)
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: --tests -- -D warnings
  #     - name: Install Rust Android Target
  #       run: rustup target add armv7-linux-androideabi
  #       if: (matrix.os == 'ubuntu-latest')
  #     - name: Run cargo clippy (Android)
  #       if: (matrix.os == 'ubuntu-latest')
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: --target=armv7-linux-androideabi -- -D warnings
  #     - name: Install Rust iOS Target
  #       run: rustup target add aarch64-apple-ios
  #       if: (matrix.os == 'macos-latest')
  #     - name: Run cargo clippy (iOS)
  #       if: (matrix.os == 'macos-latest')
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: --target=aarch64-apple-ios -- -D warnings
  #     - name: Run cargo test
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: test
  #         args: -- --test-threads=1
